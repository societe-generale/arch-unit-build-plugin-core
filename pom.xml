<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.societegenerale.commons</groupId>
  <artifactId>arch-unit-build-plugin-core</artifactId>
  <version>4.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>ArchUnit plugin core</name>
  <description>The core logic for Maven or Gradle ArchUnit plugin</description>
  <url>https://github.com/societe-generale/arch-unit-build-plugin-core</url>

  <developers>
    <developer>
      <id>arpitgarg9168</id>
      <name>Arpit Garg</name>
      <email>cs.arpit@gmail.com</email>
    </developer>
    <developer>
      <id>vincent-fuchs</id>
      <name>Vincent Fuchs</name>
      <email>vincent.fuchs@gmail.com</email>
    </developer>
    <developer>
      <id>FanJups</id>
      <name>Fanon Jupkwo</name>
      <email>jupsfan@gmail.com</email>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>Apache 2</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <url>https://github.com/societe-generale/arch-unit-build-plugin-core</url>
    <connection>scm:git:git@github.com:societe-generale/arch-unit-build-plugin-core.git</connection>
    <developerConnection>scm:git:git@github.com:societe-generale/arch-unit-build-plugin-core.git</developerConnection>
    <tag>arch_unit_build_plugin_core_4.0.0</tag>
  </scm>

  <repositories>
    <repository>
      <id>sonatype-snapshots</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
    </repository>
  </repositories>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
  </distributionManagement>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>21</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <tng.archunit.version>1.2.0</tng.archunit.version>
    <guava.version>32.1.2-jre</guava.version>
    <commons-lang3.version>3.13.0</commons-lang3.version>
    <roaster.version>2.28.0.Final</roaster.version>
    <javax.inject.version>1</javax.inject.version>
    <mockito.version>5.4.0</mockito.version>
    <junit.version>4.13.2</junit.version>
    <joda-time.version>2.12.5</joda-time.version>
    <spring-beans.version>6.0.12</spring-beans.version>
    <powermock.version>2.0.9</powermock.version>
    <lombok.version>1.18.30</lombok.version>
    <assertj.version>3.24.2</assertj.version>
    <slf4j.version>2.0.7</slf4j.version>
    <junit-jupiter.version>5.10.0</junit-jupiter.version>
    <jsr305.version>3.0.2</jsr305.version>
    <jackson.version>2.15.2</jackson.version>
    <commons-io.version>2.13.0</commons-io.version>
    <jakarta.annotation-api.version>2.1.1</jakarta.annotation-api.version>

    <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
    <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
    <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
    <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
    <nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
    <maven-release-plugin.version>3.0.1</maven-release-plugin.version>
    <jacoco.version>0.8.11</jacoco.version>
    <coveralls-maven-plugin.version>4.3.0</coveralls-maven-plugin.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <maven-source-plugin.version>3.3.0</maven-source-plugin.version>
    <maven-javadoc-plugin.version>3.5.0</maven-javadoc-plugin.version>
    <maven-gpg-plugin.version>3.1.0</maven-gpg-plugin.version>

    <project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit</artifactId>
      <version>${tng.archunit.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.forge.roaster</groupId>
      <artifactId>roaster-api</artifactId>
      <version>${roaster.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.forge.roaster</groupId>
      <artifactId>roaster-jdt</artifactId>
      <version>${roaster.version}</version>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>${javax.inject.version}</version>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda-time.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!-- Adding this lib to be able to have a test class using @Autowired. required only for test. -->
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring-beans.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${powermock.version}</version>
      <!-- Need to add powerMock as a dependency WITHOUT test scope. This way, we're sure the Powermock classes are part of the plugin, and will be found
      by the plugin at runtime in different projects. Without it, NoPowerMockRuleTest actually won't work !
       see https://github.com/TNG/ArchUnit/issues/120
       -->
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>

    <!--
   ! Added to prevent logging output during Tests
   ! based on slf4j requirement of archunit itself.
   -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-nop</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit-jupiter.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>${jsr305.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
             <groupId>jakarta.annotation</groupId>
             <artifactId>jakarta.annotation-api</artifactId>
             <version>${jakarta.annotation-api.version}</version>
       </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <!-- Sets the VM argument line used when unit tests are run. -->
          <argLine>${surefireArgLine}</argLine>
          <includes>
            <include>**/*Test.java</include>
          </includes>
        </configuration>

      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>${maven-deploy-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>${nexus-staging-maven-plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>ossrh</serverId>
          <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven-release-plugin.version}</version>
        <configuration>
          <stagingRepository>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2</stagingRepository>
          <tagNameFormat>arch_unit_build_plugin_core_@{project.version}</tagNameFormat>
          <localCheckout>true</localCheckout>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <pushChanges>false</pushChanges>
          <useReleaseProfile>false</useReleaseProfile>
          <releaseProfiles>makeRelease</releaseProfiles>
          <mavenExecutorId>forked-path</mavenExecutorId>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>pre-unit-tests</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.eluder.coveralls</groupId>
        <artifactId>coveralls-maven-plugin</artifactId>
        <version>${coveralls-maven-plugin.version}</version>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <executions>
          <execution>
            <id>copy-aut-classes-to-destination</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>testResources</goal>
            </goals>

            <configuration>
              <outputDirectory>${project.build.directory}/aut-target/classes/com/societegenerale/aut/main</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/test-classes/com/societegenerale/aut/main</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-aut-test-classes-to-destination</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>testResources</goal>
            </goals>

            <configuration>
              <outputDirectory>${project.build.directory}/aut-target/test-classes/com/societegenerale/aut/test</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}/test-classes/com/societegenerale/aut/test</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>makeRelease</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven-source-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven-javadoc-plugin.version}</version>
            <configuration>
              <encoding>UTF-8</encoding>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadoc</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven-gpg-plugin.version}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
